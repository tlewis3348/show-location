<?xml version="1.0" encoding="UTF-8" ?>
<Module>
  <ModulePrefs title="Include gadget (iframe)" title_url="http://sites.google.com/"
          description="Include another web page in your Google Site"
          thumbnail="http://www.gstatic.com/sites-gadgets/common/images/sites-icon-gadget-thumb.png"
          screenshot="http://www.gstatic.com/sites-gadgets/common/images/sites-icon-gadget-ss.png"
          height="800" width="600" author="Google">
    <Require feature="dynamic-height"/>
  </ModulePrefs>
  <UserPref name="sheetURL" display_name="URL to Google Sheet" required="true"/>
  <UserPref name="sheetINT" display_name="Data refresh interval (minutes)" default_value="0" datatype="enum" required="false">
    <EnumValue value="0" display_value="Do not refresh"/>
    <EnumValue value="60" display_value="1"/>
    <EnumValue value="300" display_value="5"/>
    <EnumValue value="1800" display_value="30"/>
  </UserPref>
  <Content type="html" view="default,canvas">
  <![CDATA[
    <!--<div id="debug_div" style="font-size:9pt; padding:5px; color: red;"></div>-->
    <div id='dest'></div>
    <script type="text/javascript" src="https://www.google.com/jsapi"></script>
    <script type="text/javascript">
      var debug = false;
      var debug_html = '';
      google.load("visualization", '1', {packages:['corechart']});
      google.setOnLoadCallback(doRender);
      
      function doRender(){
        var prefs = new gadgets.Prefs();
        var query = new google.visualization.Query(prefs.getString('sheetURL'), {sendMethod: 'auto'});
        query.setRefreshInterval(Number(prefs.getString('sheetINT')));
        query.send(handleQueryResponse);
      }
      
      function doRequest(args) {
        var retryAttempt = 0;
      
        (function doRequestWithBackoff() {
          gapi.client.request({
            path: args.path,
            method: args.method,
            body: args.body,
            params: args.params
          }).then(function(response) {
            args.processResponse(response);
          }, function(failureResponse) {
            if (failureResponse.status == 503 ||
                (failureResponse.result &&
                    failureResponse.result.error &&
                    (failureResponse.result.error.errors[0].reason ==
                        'rateLimitExceeded' ||
                        failureResponse.result.error.errors[0].reason ==
                        'userRateLimitExceeded'))) {
              if (++retryAttempt > 10) {
                return;
              }
      
              var backoffSeconds = Math.random() *
                  Math.min(Math.pow(2, retryAttempt), 20);
              window.setTimeout(doRequestWithBackoff, backoffSeconds * 1000);
      
              return;
            }
      
            if (args.processErrorResponse) {
              args.processErrorResponse(failureResponse);
            }
          });
        })();
      }
      
      function handleQueryResponse(response){
        var data = response.getDataTable();
        
        var CurrLoc = [{
          type: 'Feature',
          geometry: {
            type: 'Point',
            coordinates: [
              data.getValue(data.getNumberOfRows() - 1, 1),
              data.getValue(data.getNumberOfRows() - 1, 2)
            ]
          },
          properties: {
            Long: data.getValue(data.getNumberOfRows() - 1, 1),
            Lat: data.getValue(data.getNumberOfRows() - 1, 0),
            Name: data.getValue(1, 2),
            gx_id: '07B3E81AE343D447'
          }
        }];
        
        var clientId = 'YOUR_CLIENT_ID';
        var apiKey = 'YOUR_API_KEY';
        var scopes = 'https://www.googleapis.com/mapsengine/v1/tables';
        
        gapi.client.setApiKey(apiKey);
        window.setTimeout(checkAuth,1);
        checkAuth();
        
        doRequest({
          path: '/mapsengine/v1/tables/11689989258151602055-02741780977112259224/features/batchPatch',
          method: 'POST',
          body: {
            features: CurrLoc
          },
          processResponse: function(response) {
            $('#update-table-feature-response').text(
                JSON.stringify(response, null, 2));
          },
          processErrorResponse: function(response) {
            $('#update-table-feature-response').text('Error response:\n\n' +
                JSON.stringify(response, null, 2));
          }
        });
        
        var LayerNames2ID = {
                              'None':           'https://mapsengine.google.com/11689989258151602055-12000150354703946093-4/mapview/?authuser=0',
                              '1 Mile Loop':    'https://mapsengine.google.com/11689989258151602055-17772055697785505571-4/mapview/?authuser=0',
                              '2 Mile Loop':    'https://mapsengine.google.com/11689989258151602055-16382460135717964770-4/mapview/?authuser=0',
                              '3 Mile Loop':    'https://mapsengine.google.com/11689989258151602055-10559428504955428209-4/mapview/?authuser=0',
                              '4 Mile O&B':     'https://mapsengine.google.com/11689989258151602055-00528795335034407612-4/mapview/?authuser=0',
                              '5 Mile O&B':     'https://mapsengine.google.com/11689989258151602055-02250638340526429730-4/mapview/?authuser=0',
                              '6 Mile Loop':    'https://mapsengine.google.com/11689989258151602055-10065976550176775288-4/mapview/?authuser=0',
                              '7 Mile Loop':    'https://mapsengine.google.com/11689989258151602055-15814808351002136958-4/mapview/?authuser=0',
                              '8 Mile Loop':    'https://mapsengine.google.com/11689989258151602055-05022961771185695622-4/mapview/?authuser=0',
                              '9 Mile Loop':    'https://mapsengine.google.com/11689989258151602055-11059938081504763055-4/mapview/?authuser=0',
                              '10 Mile Loop':   'https://mapsengine.google.com/11689989258151602055-15063535589376921925-4/mapview/?authuser=0',
                              '11 Mile Loop':   'https://mapsengine.google.com/11689989258151602055-16648596607414356603-4/mapview/?authuser=0',
                              '12 Mile Loop':   'https://mapsengine.google.com/11689989258151602055-00066770394780962938-4/mapview/?authuser=0',
                              '13.1 Mile Loop': 'https://mapsengine.google.com/11689989258151602055-09837679046872805372-4/mapview/?authuser=0',
                              '13.1 Mile Race': 'https://mapsengine.google.com/11689989258151602055-05672249879554957785-4/mapview/?authuser=0',
                              'Trip Home':      'https://mapsengine.google.com/11689989258151602055-07827183864579646751-4/mapview/?authuser=0'
                            };
        
        var iframeURL = LayerNames2ID[data.getValue(0, 3)];
        
        var iframe = document.createElement('iframe');
        iframe.setAttribute('frameborder','no');
        iframe.setAttribute('src', iframeURL);
    
        var dest = document.getElementById('dest');
        dest.innerHTML = '';
        dest.appendChild(iframe);
        
        Height = window.innerHeight - 125;
        
        var viewport = gadgets.window.getViewportDimensions();
        iframe.setAttribute('width', viewport.width + 'px');
        iframe.setAttribute('height', Height + 'px');
        
        gadgets.window.adjustHeight();
      }
      
      function print(msg) {      
        if (debug) {
          debug_html += msg;
          document.getElementById('debug_div').innerHTML = debug_html;
        }
      }
    </script>
  ]]>
  </Content>
</Module>